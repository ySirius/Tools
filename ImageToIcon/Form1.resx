<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6/8Bb7+b73Sb3LgAAAAASUVORK5CYII=
</value>
  </data>
</root>